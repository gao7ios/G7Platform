# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-06-08 02:44
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='G7Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='群组名')),
                ('date_of_birth', models.DateField(auto_now=True, verbose_name='群组建立日期')),
            ],
            options={
                'verbose_name_plural': '群组',
                'verbose_name': '群组',
            },
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='G7User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_of_birth', models.DateField(auto_now=True, verbose_name='账户生成日期')),
                ('is_active', models.BooleanField(default=True, verbose_name='账户是否激活')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否是管理员')),
                ('userid', models.CharField(blank=True, default='', max_length=100, verbose_name='用户ID')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='邮箱')),
                ('username', models.CharField(default='', max_length=255, unique=True, verbose_name='用户名')),
                ('sex', models.CharField(blank=True, choices=[('man', '男'), ('female', '女'), ('unknown', '未知')], default='man', max_length=15, verbose_name='性别')),
                ('thumb', models.ImageField(default='/media/user/thumbnails/default_thumb.png', upload_to='user/thumbnails', verbose_name='头像')),
                ('age', models.IntegerField(default=0, verbose_name='年龄')),
                ('expires_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='登陆过期时间')),
                ('usignature', models.CharField(blank=True, default='', max_length=100, verbose_name='用户登陆标识')),
                ('nickname', models.CharField(blank=True, default='', max_length=255, verbose_name='昵称')),
                ('clientid', models.CharField(blank=True, default='', max_length=100, verbose_name='客户端id')),
                ('realname', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='真实姓名')),
                ('job', models.CharField(default='暂无岗位', max_length=100, verbose_name='职业')),
                ('mobile', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='电话号码')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='简介')),
                ('email_vip', models.BooleanField(default=False, verbose_name='VIP邮件接收者')),
                ('mail_pwd', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='邮箱密码')),
                ('pgyer_ukey', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='蒲公英uKey')),
                ('pgyer_apiKey', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='蒲公英api_key')),
                ('groups', models.ManyToManyField(blank=True, related_name='members', to='Account.G7Group', verbose_name='群组')),
            ],
            options={
                'verbose_name_plural': '用户',
                'verbose_name': '用户',
            },
        ),
        migrations.AddField(
            model_name='g7group',
            name='creator',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='g7group1_set', related_query_name='g7group1', to=settings.AUTH_USER_MODEL, verbose_name='群组创建者'),
        ),
        migrations.AddField(
            model_name='g7group',
            name='permissions',
            field=models.ManyToManyField(blank=True, to='auth.Permission', verbose_name='permissions'),
        ),
    ]
